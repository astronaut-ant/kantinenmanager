services:
  frontend:
    build: ./frontend
    container_name: frontend_c
    ports:
      - 3000:3000
    volumes:
      - ./frontend:/app/frontend
      - /app/frontend/node_modules

  backend:
    image: backend
    build:
      context: ./backend
      dockerfile: ./Dockerfile
    volumes:
      - ./backend:/app/backend
    depends_on:
      - db
    ports:
      - 4200:4200
      - 5678:5678
    environment:
      FLASK_APP: startup.py
      FLASK_ENV: ${FLASK_ENV}
      INITIAL_ADMIN_USERNAME: ${INITIAL_ADMIN_USERNAME}
      INITIAL_ADMIN_PASSWORD: ${INITIAL_ADMIN_PASSWORD}
      DB_DATABASE: ${DB_DATABASE}
      DB_USER: ${DB_USER}
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      DB_PASSWORD: ${DB_PASSWORD}
      JWT_SECRET: ${JWT_SECRET}

    command: "sh -c 'FLASK_ENV=migration alembic upgrade head && pip install debugpy -t /tmp && python /tmp/debugpy --wait-for-client --listen 0.0.0.0:5678 -m flask run --no-debugger --no-reload --host 0.0.0.0 --port 4200'"

  db:
    image: postgres:17-alpine
    restart: unless-stopped
    shm_size: 128mb
    environment:
      POSTGRES_DB: ${DB_DATABASE}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}

  adminer:
    image: adminer
    restart: unless-stopped
    depends_on:
      - db
    ports:
      - 8080:8080
