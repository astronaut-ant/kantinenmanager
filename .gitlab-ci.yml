stages: # List of stages for jobs, and their order of execution
  - build
  - test
  - push
  - deploy

cache:
  paths:
    - frontend/node_modules/

build-frontend:
  stage: build
  image: node
  script:
    - cd frontend
    - npm ci
    - npm run build
  artifacts:
    paths:
      - "frontend/dist/"
    when: on_success

package-frontend:
  stage: build
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  needs:
    - job: build-frontend
      artifacts: true
  variables:
    CI_REGISTRY_IMAGE: $CI_REGISTRY_FRONTEND_IMAGE:$CI_COMMIT_SHORT_SHA
  script:
    - /kaniko/executor
      --context "${CI_PROJECT_DIR}/frontend"
      --dockerfile "${CI_PROJECT_DIR}/frontend/Dockerfile.prod"
      --no-push
      --destination "${CI_REGISTRY_IMAGE}"
      --tar-path frontend.tar
  artifacts:
    paths:
      - frontend.tar
    when: on_success

package-backend:
  stage: build
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  variables:
    CI_REGISTRY_IMAGE: $CI_REGISTRY_BACKEND_IMAGE:$CI_COMMIT_SHORT_SHA
  script:
    - /kaniko/executor
      --context "${CI_PROJECT_DIR}/backend"
      --dockerfile "${CI_PROJECT_DIR}/backend/Dockerfile"
      --destination "${CI_REGISTRY_IMAGE}"

test-frontend:
  stage: test
  image: node
  script:
    - cd frontend
    - npm ci

test-backend:
  stage: test
  image: docker:cli
  services:
    - docker:dind
  script:
    - echo "run tests ...."

push-frontend:
  stage: push
  image:
    name: gcr.io/go-containerregistry/crane:debug
    entrypoint: [""]
  variables:
    CI_REGISTRY_IMAGE: $CI_REGISTRY_FRONTEND_IMAGE:$CI_COMMIT_SHORT_SHA
  script:
    - crane auth login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - crane tag $CI_REGISTRY_IMAGE latest # TODO
    - |
      if [[ "$CI_COMMIT_BRANCH" == "$CI_DEFAULT_BRANCH" ]]; then
        crane tag $CI_REGISTRY_IMAGE latest
      fi

push-backend:
  stage: push
  image:
    name: gcr.io/go-containerregistry/crane:debug
    entrypoint: [""]
  variables:
    CI_REGISTRY_IMAGE: $CI_REGISTRY_BACKEND_IMAGE:$CI_COMMIT_SHORT_SHA
  script:
    - crane auth login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - crane push backend.tar $CI_REGISTRY_IMAGE
    - |
      if [[ "$CI_COMMIT_BRANCH" == "$CI_DEFAULT_BRANCH" ]]; then
        crane tag $CI_REGISTRY_IMAGE latest
      fi

deploy-job:
  stage: deploy
  image:
    name: bitnami/kubectl:latest
    entrypoint: [""]
  script:
    - kubectl cluster-info
    - echo "Deploying application..."
    - echo "Application successfully deployed."
