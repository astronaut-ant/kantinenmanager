# PERSISTENT VOLUME
apiVersion: v1
kind: PersistentVolume
metadata:
  name: db-volume
  labels:
    type: local
    app: db
spec:
  storageClassName: manual # Provisioning is done manually
  capacity:
    storage: 10Gi
  accessModes:
    - ReadWriteMany # Multiple Pods can read and write simultaneously
  hostPath:
    path: /data/db-data # Directory on the host node to use as storage location
---
# PERSISTENT VOLUME CLAIM
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: db-volume-claim
  labels:
    app: db
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 10Gi
---
# SERVICE
apiVersion: v1
kind: Service
metadata:
  name: db-service
spec:
  selector:
    app: db-deployment
  ports:
    - protocol: TCP
      port: 5432
      targetPort: 5432
---
# DEPLOYMENT
apiVersion: apps/v1
kind: Deployment
metadata:
  name: db-deployment
  labels:
    app: db-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: db-deployment
  template:
    metadata:
      labels:
        app: db-deployment
    spec:
      containers:
        - name: db-deployment
          image: postgres:17-alpine
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 5432
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: postgresdata
          resources:
            requests:
              cpu: 100m
              memory: 128Mi
            limits:
              cpu: 200m
              memory: 256Mi
          env:
            - name: POSTGRES_USER
              valueFrom:
                configMapKeyRef:
                  name: app-configmap
                  key: DB_USER
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: dbpassword
                  key: DB_PASSWORD
            - name: POSTGRES_DB
              valueFrom:
                configMapKeyRef:
                  name: app-configmap
                  key: DB_DATABASE
      volumes:
        - name: postgresdata
          persistentVolumeClaim:
            claimName: db-volume-claim
